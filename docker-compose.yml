services:
  fakeserver:
    image: nginx
    volumes:
      - ./fakeserver/metrics:/usr/share/nginx/html/metrics
      - ./fakeserver/data:/usr/share/nginx/html/data
      - ./fakeserver/default.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "8082:8080"
  frmcompanion:
    image: golang
    working_dir: /usr/src
    entrypoint: /usr/local/bin/init.sh
    volumes:
      - ./frmcompanion/init.sh:/usr/local/bin/init.sh
    environment:
      - FRM_HOST=${FRM_HOST:-host.docker.internal}
      - FRM_PORT=${FRM_PORT:-8080}
      - FRM_HOSTS=${FRM_HOSTS}
    ports:
      - "9000:9000"
      - "8000:8000"
  prometheus:
    image: prom/prometheus
    volumes:
      - ./prometheus:/etc/prometheus
    ports:
      - "9090:9090"

  frmcache:
    image: golang
    working_dir: /usr/src/app
    entrypoint: /usr/local/bin/init.sh
    volumes:
      - ./frmcache/init.sh:/usr/local/bin/init.sh
      - ./frmcache/src:/usr/src
    environment:
      - FRM_HOST=${FRM_HOST:-host.docker.internal}
      - FRM_PORT=${FRM_PORT:-8080}
      - FRM_HOSTS=${FRM_HOSTS}
      - PG_HOST=${PG_HOST:-postgres}
      - PG_PORT=${PG_PORT:-5432}
      - PG_PASSWORD=${PG_PASSWORD:-secretpassword}
      - PG_USER=${PG_USER:-postgres}
      - PG_DB=${PG_DB:-postgres}
  postgres:
    image: postgres
    environment:
      - POSTGRES_PASSWORD=secretpassword

  alertmanager-config:
    image: golang
    working_dir: /usr/src/app
    entrypoint: /usr/local/bin/init.sh
    volumes:
      - ./alertmanager:/etc/alertmanager
      - ./alertmanager-config/init.sh:/usr/local/bin/init.sh
      - ./alertmanager-config/src:/usr/src
    environment:
      - FRM_HOST=${FRM_HOST:-host.docker.internal}
      - FRM_PORT=${FRM_PORT:-8080}
      - FRM_HOSTS=${FRM_HOSTS}
      - DISCORD_WEBHOOK=${DISCORD_WEBHOOK}
      - DISCORD_WEBHOOKS=${DISCORD_WEBHOOKS}

  alertmanager:
    image: prom/alertmanager
    volumes:
      - ./alertmanager:/etc/alertmanager
    ports:
      - "9093:9093"
    depends_on:
      alertmanager-config:
        condition: service_completed_successfully
        restart: true

  grafana:
    image: grafana/grafana-oss
    volumes:
      - ./grafana/datasources:/etc/grafana/provisioning/datasources
      - ./grafana/dashboards.yml:/etc/grafana/provisioning/dashboards/dashboards.yml
      - ./grafana/dashboards:/var/lib/grafana/dashboards
      - ./grafana/grafana.ini:/etc/grafana/grafana.ini
      - ./grafana/icons:/usr/share/grafana/public/img/icons/satisfactory
    ports:
      - "3000:3000"
